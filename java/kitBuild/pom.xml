<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

	<modelVersion>4.0.0</modelVersion>

	<groupId>org.serviceconnector</groupId>
	<artifactId>sc.dist</artifactId>
	<version>3.6.0.RELEASE</version>
	<name>SC Delivery</name>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

		<application.folder.name>${project.build.directory}/classes</application.folder.name>
		<collected.folder.name>collected</collected.folder.name>
		<provided.folder.name>provided</provided.folder.name>

		<collected.resources.src.path>src/main/resources/${collected.folder.name}/</collected.resources.src.path>
		<provided.resources.src.path>${application.folder.name}/${provided.folder.name}/</provided.resources.src.path>

		<installation.dest.path>/</installation.dest.path>
		<conf.dest.path>conf</conf.dest.path>
		<bin.dest.path>bin</bin.dest.path>
		<doc.dest.path>doc</doc.dest.path>
		<sources.dest.path>sources</sources.dest.path>
		<examples.dest.path>examples</examples.dest.path>

		<kit.dest.path>kit</kit.dest.path>

		<!-- Artifact Versions -->
		<sc.version>3.6.0.RELEASE</sc.version>
		

	</properties>

	<repositories>
		<repository>
			<id>repository.stabilit.ch</id>
			<url>http://v-essenza:25081/nexus/content/groups/ntp.repos/</url>
		</repository>
	</repositories>

	<build>
		<pluginManagement>
			<plugins>
				<!-- Ignore/Execute plugin execution -->
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.apache.maven.plugins</groupId>
										<artifactId>maven-dependency-plugin</artifactId>
										<versionRange>[1.0.0,)</versionRange>
										<goals>
											<goal>copy</goal>
											<goal>copy-dependencies</goal>
											<goal>unpack</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore />
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
		<plugins>
			<plugin>
				<artifactId>maven-clean-plugin</artifactId>
				<version>2.5</version>
				<executions>
					<execution>
						<id>clean-collected-resources</id>
						<phase>clean</phase>
						<goals>
							<goal>clean</goal>
						</goals>
						<configuration>
							<filesets>
								<fileset>
									<directory>${collected.resources.src.path}</directory>
								</fileset>
							</filesets>
						</configuration>
					</execution>
					<execution>
						<phase>clean</phase>
						<goals>
							<goal>clean</goal>
						</goals>
						<id>clean-kit-directory</id>
						<configuration>
							<filesets>
								<fileset>
									<directory>${kit.dest.path}</directory>
									<includes>
										<include>**/*</include>
									</includes>
								</fileset>
							</filesets>
						</configuration>
					</execution>
				</executions>
			</plugin>
			
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-assembly-plugin</artifactId>
				<version>2.4</version>
				<configuration>
					<finalName>sc</finalName>
					<descriptors>
						<descriptor>/src/main/assembly/application-bin-descriptor.xml</descriptor>
						<descriptor>/src/main/assembly/application-src-descriptor.xml</descriptor>
					</descriptors>
					<outputDirectory>${kit.dest.path}</outputDirectory>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<executions>
					<execution>
						<id>copy-dependencies</id>
						<phase>package</phase>
						<goals>
							<goal>copy-dependencies</goal>
						</goals>
						<configuration>
							<outputDirectory>${project.build.directory}/lib</outputDirectory>
							<overWriteReleases>false</overWriteReleases>
							<overWriteSnapshots>false</overWriteSnapshots>
							<actTransitively>false</actTransitively>
							<transitive>false</transitive>
							<overWriteIfNewer>true</overWriteIfNewer>
							<excludeScope>provided</excludeScope>
							<ignoreNonCompile>true</ignoreNonCompile>
							<includeScope>runtime</includeScope>
						</configuration>
					</execution>
					<execution>
						<id>unpack</id>
						<phase>generate-resources</phase>
						<goals>
							<goal>unpack</goal>
						</goals>
						<configuration>
							<scope>test</scope>
							<artifactItems>
								<artifactItem>
									<groupId>org.serviceconnector</groupId>
									<artifactId>demo-client</artifactId>
									<version>${sc.version}</version>
									<type>jar</type>
									<overWrite>true</overWrite>
									<outputDirectory>${collected.resources.src.path}/demo-client</outputDirectory>
									<includes>**/*.properties,**/logback.xml</includes>
									<excludes>**/*.class,META-INF/**/*.*</excludes>
								</artifactItem>
								<artifactItem>
									<groupId>org.serviceconnector</groupId>
									<artifactId>demo-server</artifactId>
									<version>${sc.version}</version>
									<type>jar</type>
									<overWrite>true</overWrite>
									<outputDirectory>${collected.resources.src.path}/demo-server</outputDirectory>
									<includes>**/*.properties,**/logback.xml</includes>
									<excludes>**/*.class,META-INF/**/*.*</excludes>
								</artifactItem>
								<artifactItem>
									<groupId>org.serviceconnector</groupId>
									<artifactId>demo-web-server</artifactId>
									<version>${sc.version}</version>
									<type>war</type>
									<overWrite>true</overWrite>
									<outputDirectory>${collected.resources.src.path}/demo-web-server</outputDirectory>
									<includes>WEB-INF/web.xml</includes>
									<excludes>**/*.class,META-INF/**/*.*</excludes>
								</artifactItem>
								<artifactItem>
									<groupId>org.serviceconnector</groupId>
									<artifactId>sc-console</artifactId>
									<version>${sc.version}</version>
									<type>jar</type>
									<overWrite>true</overWrite>
									<outputDirectory>${collected.resources.src.path}/sc-cosnole</outputDirectory>
									<includes>**/*.properties,**/logback.xml</includes>
									<excludes>**/*.class,META-INF/**/*.*</excludes>
								</artifactItem>
								<artifactItem>
									<groupId>org.serviceconnector</groupId>
									<artifactId>sc</artifactId>
									<version>${sc.version}</version>
									<type>jar</type>
									<overWrite>true</overWrite>
									<outputDirectory>${collected.resources.src.path}/sc</outputDirectory>
									<includes>**/*.properties,**/logback.xml</includes>
									<excludes>**/*.class,META-INF/**/*.*</excludes>
								</artifactItem>
							</artifactItems>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
		<resources>
			<resource>
				<directory>src/main/resources</directory>
				<filtering>true</filtering>
				<includes>
					<include>**/start*.sh</include>
					<include>**/start*.bat</include>
					<include>**/stop*.sh</include>
					<include>**/stop*.bat</include>
				</includes>
			</resource>
			<resource>
				<directory>src/main/resources</directory>
				<filtering>false</filtering>
				<excludes>
					<exclude>**/start*.sh</exclude>
					<exclude>**/start*.bat</exclude>
					<exclude>**/stop*.sh</exclude>
					<exclude>**/stop*.bat</exclude>
				</excludes>
			</resource>
		</resources>
	</build>

	<dependencies>

		<dependency>
			<groupId>org.serviceconnector</groupId>
			<artifactId>sc</artifactId>		
			<version>${sc.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.serviceconnector</groupId>
			<artifactId>sc-lib</artifactId>		
			<version>${sc.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.serviceconnector</groupId>
			<artifactId>sc-lib</artifactId>		
			<version>${sc.version}</version>
			<classifier>sources</classifier> 
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.serviceconnector</groupId>
			<artifactId>sc-lib</artifactId>		
			<version>${sc.version}</version>
			<classifier>javadoc</classifier> 
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.serviceconnector</groupId>
			<artifactId>sc-web</artifactId>		
			<version>${sc.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.serviceconnector</groupId>
			<artifactId>sc-web</artifactId>		
			<version>${sc.version}</version>
			<classifier>sources</classifier> 
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.serviceconnector</groupId>
			<artifactId>sc-console</artifactId>		
			<version>${sc.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.serviceconnector</groupId>
			<artifactId>demo-client</artifactId>		
			<version>${sc.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.serviceconnector</groupId>
			<artifactId>demo-client</artifactId>		
			<version>${sc.version}</version>
			<classifier>sources</classifier> 
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.serviceconnector</groupId>
			<artifactId>demo-server</artifactId>		
			<version>${sc.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.serviceconnector</groupId>
			<artifactId>demo-server</artifactId>		
			<version>${sc.version}</version>
			<classifier>sources</classifier> 
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.serviceconnector</groupId>
			<artifactId>demo-web-server</artifactId>		
			<version>${sc.version}</version>
			 <type>war</type>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.serviceconnector</groupId>
			<artifactId>demo-web-server</artifactId>		
			<version>${sc.version}</version>
			<classifier>sources</classifier> 
			<scope>test</scope>
		</dependency>	
		
	</dependencies>
</project>
